At present, Dubnium uses SCons as a build system. The original plan was to move
to autoconf at some point after 0.1.0, but frankly, I like SCons too much now
to do so and every time I look at the autoconf manual I get a little scared.

So, to build, here's what you need:
- SCons 0.96 or later.
- wxWidgets 2.8.0 or later; 2.8.2+ is recommended.

If you want to build and run the unit tests, you'll also need CPPUnit 1.12.0 or
later.

If building on Windows, you'll need to set the path to wxWidgets (and CPPUnit,
if building the tests) within the SConstruct file in this directory. You'll
also need a working Visual C++ install (I've only tested it with 2005) and a
fair bit of patience.

Assuming SCons and wxWidgets are installed properly, a release build of Dubnium
can then be built by simply executing "scons" in this directory. After churning
away for a little while, this should result in a "Dubnium" binary in the
build/release/Dubnium directory.

On non-Windows platforms, you can then execute "scons install" to install the
Dubnium binary to $PREFIX/bin/dubnium. By default, the prefix is /usr/local;
should you want to change this, rebuild with the PREFIX option set. For example
to build and install into $HOME, you would execute:
scons PREFIX=$HOME
sudo scons PREFIX=$HOME install

The installed binaries and data files can be uninstalled via "scons -c
install".
